# Decode base64
function decode() {
    echo "$1" | base64 --decode ; echo
}

# rgrav wrapper to be able to use a branch version
function rgrav() {
    command="$@";
    I_REALLY_WANT_TO_USE_AN_UNSTABLE_VERSION_OF_RGRAV=yes ~/projects/rgrav/rgrav "$command";
}

# docker stop & rm
function docker-clean() {
    docker stop $(docker ps -a -q -f name=$1) && docker rm $(docker ps -a -q -f name=$1)
}

# VPN ip (assumes vpn is eth2)
# Use with `route add <ip> $(vpnip)`
function vpnip() {
  ip="$(ifconfig eth2 |grep "inet addr" | cut -d " " -f 12,1 | cut -d ":" -f 2)"
  echo $ip
}

# burnttoast. Usage 'toast This is my message'
# WSL only. TODO add a check for powershell.
function toast() {
  msg="$@";

  powershell.exe -command New-BurntToastNotification -AppLogo c:\\ubuntu-logo32.png -Text \"WSL\", \"$msg\"
}

function pingme() {
  exit_code=$?

  img=c:\\snoopy-happy.png
  msg='Finished.'

  if [[ $exit_code -eq 1 ]]; then
    img=c:\\coyote-fail.jpg
    msg='Oops.'
  fi

  powershell.exe -command New-BurntToastNotification -AppLogo $img -Text \"WSL\", \"$msg\"
}

function docker-rtail {
  host=$1
  log_file=$2

  a=0;
  until docker exec -i $host tail -f $log_file 2> /dev/null; do
    if [ $a -eq "0" ]; then
      echo -n 'Waiting for log';
      a=1;
    else
      echo -n '.';
    fi;
    sleep 1;
  done
}
